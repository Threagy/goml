// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/v1/user/user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("proto/v1/user/user.proto", fileDescriptor_a8fd1c8d22ccfa2e) }

var fileDescriptor_a8fd1c8d22ccfa2e = []byte{
	// 276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x28, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x33, 0xd4, 0x2f, 0x2d, 0x4e, 0x2d, 0x02, 0x13, 0x7a, 0x60, 0x21, 0x21, 0x2e,
	0x30, 0xa5, 0x07, 0x12, 0x91, 0x92, 0xc7, 0x54, 0xa5, 0x9b, 0x9c, 0x9f, 0x9b, 0x9b, 0x9f, 0x07,
	0x51, 0x2c, 0x25, 0x93, 0x9e, 0x9f, 0x9f, 0x9e, 0x93, 0xaa, 0x9f, 0x58, 0x90, 0xa9, 0x9f, 0x98,
	0x97, 0x97, 0x5f, 0x92, 0x58, 0x92, 0x99, 0x9f, 0x57, 0x0c, 0x95, 0x95, 0x86, 0xca, 0x82, 0x79,
	0x49, 0xa5, 0x69, 0xfa, 0xa9, 0xb9, 0x05, 0x25, 0x95, 0x10, 0x49, 0xa3, 0x45, 0x4c, 0x5c, 0xdc,
	0xa1, 0xc5, 0xa9, 0x45, 0xbe, 0x89, 0x79, 0x89, 0xe9, 0xa9, 0x45, 0x42, 0x11, 0x5c, 0x1c, 0xee,
	0xa9, 0x25, 0x20, 0x91, 0x62, 0x21, 0x69, 0x3d, 0x84, 0x23, 0xf4, 0x60, 0xa2, 0x41, 0xa9, 0x85,
	0xa5, 0xa9, 0xc5, 0x25, 0x52, 0x32, 0xd8, 0x25, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x95, 0x04,
	0x9b, 0x2e, 0x3f, 0x99, 0xcc, 0xc4, 0x2d, 0xc4, 0x09, 0x73, 0x75, 0xb1, 0x50, 0x04, 0x17, 0x97,
	0x6f, 0x7e, 0x4a, 0x66, 0x5a, 0x25, 0x48, 0xa5, 0x90, 0x2c, 0xb2, 0x76, 0x84, 0x38, 0xcc, 0x74,
	0x31, 0x3d, 0x88, 0xa3, 0xf5, 0x60, 0x8e, 0xd6, 0x73, 0x05, 0x39, 0x5a, 0x49, 0x18, 0x6c, 0x2e,
	0xaf, 0x14, 0x07, 0xcc, 0x5c, 0x2b, 0x46, 0x2d, 0xa1, 0x78, 0x2e, 0x2e, 0x97, 0xd4, 0x9c, 0xd4,
	0x92, 0x54, 0x4c, 0x93, 0x11, 0xe2, 0x84, 0x4c, 0x96, 0x02, 0x9b, 0x2c, 0xa2, 0x25, 0x04, 0x0f,
	0xe7, 0x6a, 0x10, 0x19, 0x9f, 0x99, 0x52, 0xeb, 0xa4, 0x16, 0xa5, 0x92, 0x9e, 0x59, 0x92, 0x51,
	0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0xab, 0x9f, 0x9e, 0x9f, 0x9b, 0x03, 0x26, 0x52, 0x4b, 0xf4, 0x51,
	0x62, 0x26, 0x89, 0x0d, 0xcc, 0x35, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xd8, 0xe2, 0x1f,
	0xd7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserManagerClient is the client API for UserManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserManagerClient interface {
	//
	GetUsers(ctx context.Context, in *GetUsersRequest, opts ...grpc.CallOption) (*GetUsersResponse, error)
	//
	ModifyUser(ctx context.Context, in *ModifyUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	//
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type userManagerClient struct {
	cc *grpc.ClientConn
}

func NewUserManagerClient(cc *grpc.ClientConn) UserManagerClient {
	return &userManagerClient{cc}
}

func (c *userManagerClient) GetUsers(ctx context.Context, in *GetUsersRequest, opts ...grpc.CallOption) (*GetUsersResponse, error) {
	out := new(GetUsersResponse)
	err := c.cc.Invoke(ctx, "/proto.user.UserManager/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagerClient) ModifyUser(ctx context.Context, in *ModifyUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.user.UserManager/ModifyUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userManagerClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.user.UserManager/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserManagerServer is the server API for UserManager service.
type UserManagerServer interface {
	//
	GetUsers(context.Context, *GetUsersRequest) (*GetUsersResponse, error)
	//
	ModifyUser(context.Context, *ModifyUserRequest) (*empty.Empty, error)
	//
	DeleteUser(context.Context, *DeleteUserRequest) (*empty.Empty, error)
}

// UnimplementedUserManagerServer can be embedded to have forward compatible implementations.
type UnimplementedUserManagerServer struct {
}

func (*UnimplementedUserManagerServer) GetUsers(ctx context.Context, req *GetUsersRequest) (*GetUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (*UnimplementedUserManagerServer) ModifyUser(ctx context.Context, req *ModifyUserRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ModifyUser not implemented")
}
func (*UnimplementedUserManagerServer) DeleteUser(ctx context.Context, req *DeleteUserRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}

func RegisterUserManagerServer(s *grpc.Server, srv UserManagerServer) {
	s.RegisterService(&_UserManager_serviceDesc, srv)
}

func _UserManager_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagerServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.user.UserManager/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagerServer).GetUsers(ctx, req.(*GetUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManager_ModifyUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagerServer).ModifyUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.user.UserManager/ModifyUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagerServer).ModifyUser(ctx, req.(*ModifyUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserManager_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserManagerServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.user.UserManager/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserManagerServer).DeleteUser(ctx, req.(*DeleteUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.user.UserManager",
	HandlerType: (*UserManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUsers",
			Handler:    _UserManager_GetUsers_Handler,
		},
		{
			MethodName: "ModifyUser",
			Handler:    _UserManager_ModifyUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _UserManager_DeleteUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/v1/user/user.proto",
}
